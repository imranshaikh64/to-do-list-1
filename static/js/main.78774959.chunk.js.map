{"version":3,"sources":["images/logo.png","App.js","index.js"],"names":["App","useState","inputData","setInputData","localStorage","getItem","JSON","parse","items","setItems","toggleSubmit","setToggleSubmit","isEdititem","setIsEditItem","addItem","map","elem","id","name","allInutData","Date","getTime","toString","alert","className","src","logo","alt","type","placeholder","value","onChange","event","target","title","onClick","newEditItem","find","editItem","ind","updatedItem","filter","deleteItem","ReactDOM","render","document","getElementById"],"mappings":"2LAAe,MAA0B,iC,OCiI1BA,EAlHH,WACV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZfG,aAAaC,QAAQ,SAEvBC,KAAKC,MAAMH,aAAaC,QAAQ,UAGhC,IAOT,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAqCR,oBAAS,GAA9C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAmCV,qBAAnC,mBAAOW,EAAP,KAAkBC,EAAlB,KAGMC,EAAU,WACd,GAAKZ,EAGA,GAAGA,IAAcQ,EACpBD,EACED,EAAMO,KAAI,SAACC,GACT,GAAGA,EAAKC,IAAIL,EACV,OAAO,2BACFI,GADL,IACWE,KAAKhB,QAMtBS,GAAgB,GAEhBR,EAAa,IAEbU,EAAc,UAIX,CACH,IAAMM,EAAc,CAAEF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAMhB,GACjEO,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBhB,EAAa,SAxBboB,MAAM,uBAoDV,OACE,mCACE,qBAAKC,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,qBAAKC,IAAKC,EAAMC,IAAI,SACpB,+DAGF,sBAAKH,UAAU,WAAf,UACE,uBAAOI,KAAK,OAAOC,YAAY,eAAeC,MAAO5B,EAAW6B,SAAU,SAACC,GACzE7B,EAAa6B,EAAMC,OAAOH,UAG1BpB,EAAe,mBAAGc,UAAU,qBAAqBU,MAAM,WAAWC,QAASrB,IAC3E,mBAAGU,UAAU,sBAAsBU,MAAM,kBAAkBC,QAASrB,OAKxE,qBAAKU,UAAU,YAAf,SAEIhB,EAAMO,KAAI,SAACC,GACT,OACE,sBAAKQ,UAAU,WAAf,UACE,6BAAKR,EAAKE,OACV,sBAAKM,UAAU,WAAf,UACE,mBAAGA,UAAU,sBAAsBU,MAAM,YAAYC,QAAS,kBAzCjE,SAAClB,GAChB,IAAImB,EAAc5B,EAAM6B,MAAK,SAACrB,GAC5B,OAAOA,EAAKC,IAAMA,KAGpBN,GAAgB,GAEhBR,EAAaiC,EAAYlB,MAEzBL,EAAcI,GAgCwEqB,CAAStB,EAAKC,OAClF,mBAAGO,UAAU,2BAA2BU,MAAM,cAAcC,QAAS,kBApDtE,SAACI,GAClB,IAAMC,EAAchC,EAAMiC,QAAO,SAACzB,GAChC,OAAOuB,IAAQvB,EAAKC,MAEtBR,EAAS+B,GAgDoFE,CAAW1B,EAAKC,YAJhED,EAAKC,SAkB5C,qBAAKO,UAAU,YAAf,SACE,wBAAQA,UAAU,eAAe,oBAAkB,aAAaW,QA5DxD,WAChB1B,EAAS,KA2DD,SAAoF,0DCjHhGkC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.78774959.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e29cb290.png\";","import React, { useState } from \"react\";\nimport logo from '../src/images/logo.png'\n\n\nconst getLocalItems = () => {\n  let list = localStorage.getItem('lists');\n  if(list){\n    return JSON.parse(localStorage.getItem('lists'));\n  }\n  else{\n    return [];\n  }\n}\n\n\nconst App = () => {\n  const [inputData, setInputData] = useState('');\n  const [items, setItems] = useState(getLocalItems());\n  const [toggleSubmit,setToggleSubmit]=useState(true);\n  const [isEdititem,setIsEditItem] = useState();\n\n\n  const addItem = () => {\n    if (!inputData) {\n      alert('plz fill the data!')\n    }\n    else if(inputData && !toggleSubmit){\n      setItems(\n        items.map((elem)=> {\n          if(elem.id==isEdititem){\n            return {\n              ...elem, name:inputData\n            }\n            \n          }\n        })\n      )\n      setToggleSubmit(true);\n\n      setInputData('');\n\n      setIsEditItem(null);\n\n\n    } \n    else {\n      const allInutData = { id: new Date().getTime().toString(), name: inputData }\n      setItems([...items, allInutData]);\n      setInputData('')\n    }\n  }\n\n  const deleteItem = (ind) => {\n    const updatedItem = items.filter((elem) => {\n      return ind !== elem.id;\n    })\n    setItems(updatedItem);\n  }\n\n  const removeAll = () => {\n    setItems([]);\n  }\n  const editItem = (id) => {\n    let newEditItem = items.find((elem)=>{\n      return elem.id == id;\n\n    })\n    setToggleSubmit(false);\n\n    setInputData(newEditItem.name);\n\n    setIsEditItem(id);\n\n  }\n\n\n  return (\n    <>\n      <div className='main-div'>\n        <div className='child-div'>\n          <figure>\n            <img src={logo} alt='logo' />\n            <figcaption>Add your list here</figcaption>\n          </figure>\n\n          <div className='addItems'>\n            <input type='text' placeholder='add items...' value={inputData} onChange={(event) => {\n              setInputData(event.target.value)\n            }} />\n            {\n              toggleSubmit ? <i className='fa fa-plus add-btn' title='Add Item' onClick={addItem}></i> :\n              <i className=\"far fa-edit add-btn\" title='updateItem Item' onClick={addItem}></i>\n            }\n            \n          </div>\n\n          <div className='showItems'>\n            {\n              items.map((elem) => {\n                return (\n                  <div className='eachItem' key={elem.id}>\n                    <h3>{elem.name}</h3>\n                    <div className='todo-btn'>\n                      <i className=\"far fa-edit add-btn\" title='Edit Item' onClick={() => editItem(elem.id)}></i>\n                      <i className=\"far fa-trash-alt add-btn\" title='Delete Item' onClick={() => deleteItem(elem.id)}></i>\n                    </div>\n\n                  </div>\n\n                );\n\n\n              })\n\n            }\n\n          </div>\n\n          <div className='showItems'>\n            <button className='btn effect04' data-sm-link-text='Remove All' onClick={removeAll}><span>Check List</span></button>\n          </div>\n\n        </div>\n      </div>\n    </>\n\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}